Docker Compose is a tool for defining and running multi-container applications.
It is the key to unlocking a streamlined and efficient development and deployment experience.

Compose simplifies the control of your entire application stack, making it easy to manage services,
networks, and volumes in a single, comprehensible YAML configuration file.
Then, with a single command, you create and start all the services from your configuration file.
Compose works in all environments; production, staging, development, testing, as well as CI workflows.

It also has commands for managing the whole lifecycle of your application:

- Start, stop and rebuild services;
- View the status of running services;
- Stream the log output of running services;
- Run a one-off command on a service;

How it Works:
With Docker Compose you use a YAML configuration file, known as the Compose file, to configure your applicationâ€™s services,
and then you create and start all the services from your configuration with the Compose CLI.

The Compose file, or compose.yaml file, follows the rules provided by the Compose Specification in how to define multi-container applications.
This is the Docker Compose implementation of the formal Compose Specification.
(see Compose_file.txt).

CLI:
The Docker CLI lets you interact with your Docker Compose applications through the docker compose command, and its subcommands.
Using the CLI, you can manage the lifecycle of your multi-container applications defined in the compose.yaml file.
The CLI commands enable you to start, stop, and configure your applications effortlessly.

Key Commands:

- to stars all the services use: "docker compose up";
- to stop and remove the running services use: "docker compose down";
- to monitoring the output of your running containers and debug issues use: "docker compose log";
- to list all services along with their status use: "docker compose ps";




